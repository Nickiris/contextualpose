import os

from yacs.config import CfgNode as CN

_C = CN()

_C.WORKERS = 4
_C.RANK = 0
_C.GPUS = (0, 1, 2, 3)
_C.DIST_BACKEND = 'nccl'
_C.AUTO_RESUME = False
_C.PIN_MEMORY = True
_C.VERBOSE = True
_C.BATCH_SIZE = 24
_C.DDP = True
_C.OUTPUT_DIR = "experiment"

# Cudnn related params
_C.CUDNN = CN()
_C.CUDNN.BENCHMARK = True
_C.CUDNN.DETERMINISTIC = False
_C.CUDNN.ENABLED = True

# common params for NETWORK
_C.MODEL = CN()
_C.MODEL.NAME = 'ContextualPose'
_C.MODEL.INIT_WEIGHTS = True
_C.MODEL.PRETRAINED = ''  # pretrained model
_C.MODEL.SYNC_BN = False
_C.MODEL.BIAS_PROB = 0.01

_C.MODEL.BACKBONE = CN()
_C.MODEL.BACKBONE.NAME = 'HRNet'
_C.MODEL.BACKBONE.PRETRAINED_LAYERS = [ '*' ]
_C.MODEL.BACKBONE.STAGES = CN()
_C.MODEL.BACKBONE.STAGES.NUM_STAGES = 3
_C.MODEL.BACKBONE.STAGES.NUM_MODULES = [1, 4, 3]
_C.MODEL.BACKBONE.STAGES.NUM_BRANCHES = [2, 3, 4]
_C.MODEL.BACKBONE.STAGES.BLOCK = ['BASIC', 'BASIC', 'BASIC']
_C.MODEL.BACKBONE.STAGES.NUM_BLOCKS = [[4, 4], [4, 4, 4], [4, 4, 4, 4]]
_C.MODEL.BACKBONE.STAGES.NUM_CHANNELS = [[32, 64], [32, 64, 128], [32, 64, 128, 256]]
_C.MODEL.BACKBONE.STAGES.FUSE_METHOD = ['SUM', 'SUM', 'SUM']

_C.MODEL.DECODER = CN()
_C.MODEL.DECODER.NUM_HEADS = 8
_C.MODEL.DECODER.MLP_RATIO = 4
_C.MODEL.DECODER.NUM_LAYERS = 3  # 4, 3
_C.MODEL.DECODER.DROPOUT = 0.1
_C.MODEL.KSIZE = 5

_C.LOSS = CN()
_C.LOSS.MULTI_HEATMAP_LOSS_WEIGHT = 1.0
_C.LOSS.CONTRASTIVE_LOSS_WEIGHT = 1.0
_C.LOSS.SINGLE_HEATMAP_LOSS_WEIGHT = 3.0

# DATASET related params
_C.DATASET = CN()
_C.DATASET.ROOT = ''
_C.DATASET.DATASET = 'coco'
_C.DATASET.NUM_KEYPOINTS = 17
_C.DATASET.MAX_INSTANCES = 100
_C.DATASET.TRAIN = 'train2017'
_C.DATASET.TEST = 'val2017'
_C.DATASET.FILTER_IMAGE = False
_C.DATASET.SIGMA = 2.0
_C.DATASET.FLIP = 0.5
_C.DATASET.FLIP_INDEX = [
        0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15
    ]

# training data augmentation
_C.DATASET.MAX_ROTATION = 30
_C.DATASET.MIN_SCALE = 0.75
_C.DATASET.MAX_SCALE = 1.50
_C.DATASET.SCALE_TYPE = 'short'
_C.DATASET.MAX_TRANSLATE = 40
_C.DATASET.INPUT_SIZE = 512
_C.DATASET.OUTPUT_SIZE = 128
_C.DATASET.NUM_CENTER = 3

# train
_C.TRAIN = CN()

_C.TRAIN.LR_SCHEDULER = 'step'
_C.TRAIN.LR_FACTOR = 0.1
_C.TRAIN.LR_STEP = [90, 120]
_C.TRAIN.LR = 0.0005

_C.TRAIN.OPTIMIZER = 'adam'
_C.TRAIN.MOMENTUM = 0.9
_C.TRAIN.WD = 0.0001
_C.TRAIN.NESTEROV = False
_C.TRAIN.GAMMA1 = 0.9
_C.TRAIN.GAMMA2 = 0.999

_C.TRAIN.BEGIN_EPOCH = 0
_C.TRAIN.END_EPOCH = 140



# testing
_C.TEST = CN()
_C.TEST.FLIP_TEST = False
_C.TEST.IMAGES_PER_GPU = 1
_C.TEST.MODEL_FILE = ''  # for test
_C.TEST.OKS_SCORE = 0.8
_C.TEST.OKS_SIGMAS = [.26, .25, .25, .35, .35, .79, .79, .72, .72, .62,.62, 1.07, 1.07, .87, .87, .89, .89]

_C.TEST.MAX_PROPOSALS = 30
_C.TEST.KEYPOINT_THRESHOLD = 0.01
_C.TEST.CENTER_POOL_KERNEL = 3

_C.TEST.POOL_THRESHOLD1 = 300
_C.TEST.POOL_THRESHOLD2 = 200
_C.TEST.FREQ = 20

if __name__ == '__main__':
    import sys
    with open(sys.argv[1], 'w') as f:
        print(_C, file=f)

